// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: case.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message representing a case event to be sent to the message queue
type CaseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId    string                 `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" form:"case_id" json:"case_id,omitempty" query:"case_id"`
	CaseType  string                 `protobuf:"bytes,2,opt,name=case_type,json=caseType,proto3" form:"case_type" json:"case_type,omitempty" query:"case_type"`
	Data      []byte                 `protobuf:"bytes,3,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"` // Can be JSON, XML, or another serialized format
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" form:"timestamp" json:"timestamp,omitempty" query:"timestamp"`
	Metadata  map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" form:"metadata" json:"metadata,omitempty" query:"metadata"` // Optional metadata
}

func (x *CaseEvent) Reset() {
	*x = CaseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseEvent) ProtoMessage() {}

func (x *CaseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_case_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseEvent.ProtoReflect.Descriptor instead.
func (*CaseEvent) Descriptor() ([]byte, []int) {
	return file_case_proto_rawDescGZIP(), []int{0}
}

func (x *CaseEvent) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *CaseEvent) GetCaseType() string {
	if x != nil {
		return x.CaseType
	}
	return ""
}

func (x *CaseEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CaseEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CaseEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request message for publishing a case event
type ImportEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *CaseEvent `protobuf:"bytes,1,opt,name=event,proto3" form:"event" json:"event,omitempty" query:"event"`
}

func (x *ImportEventRequest) Reset() {
	*x = ImportEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportEventRequest) ProtoMessage() {}

func (x *ImportEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportEventRequest.ProtoReflect.Descriptor instead.
func (*ImportEventRequest) Descriptor() ([]byte, []int) {
	return file_case_proto_rawDescGZIP(), []int{1}
}

func (x *ImportEventRequest) GetEvent() *CaseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

// Response message after attempting to publish a case event
type ImportEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" form:"success" json:"success,omitempty" query:"success"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" form:"message" json:"message,omitempty" query:"message"`                  // Optional message, e.g., error message
	EventId string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" form:"event_id" json:"event_id,omitempty" query:"event_id"` // Optional ID of the published event, if available
}

func (x *ImportEventResponse) Reset() {
	*x = ImportEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportEventResponse) ProtoMessage() {}

func (x *ImportEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportEventResponse.ProtoReflect.Descriptor instead.
func (*ImportEventResponse) Descriptor() ([]byte, []int) {
	return file_case_proto_rawDescGZIP(), []int{2}
}

func (x *ImportEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ImportEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImportEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

var File_case_proto protoreflect.FileDescriptor

var file_case_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x02, 0x0a, 0x09, 0x43, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x3c, 0x0a, 0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x64, 0x0a,
	0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x32, 0x5e, 0x0a, 0x11, 0x43, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x79, 0x6f, 0x75, 0x72, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x79,
	0x6f, 0x75, 0x72, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x62, 0x69,
	0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_case_proto_rawDescOnce sync.Once
	file_case_proto_rawDescData = file_case_proto_rawDesc
)

func file_case_proto_rawDescGZIP() []byte {
	file_case_proto_rawDescOnce.Do(func() {
		file_case_proto_rawDescData = protoimpl.X.CompressGZIP(file_case_proto_rawDescData)
	})
	return file_case_proto_rawDescData
}

var file_case_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_case_proto_goTypes = []interface{}{
	(*CaseEvent)(nil),             // 0: proto.CaseEvent
	(*ImportEventRequest)(nil),    // 1: proto.ImportEventRequest
	(*ImportEventResponse)(nil),   // 2: proto.ImportEventResponse
	nil,                           // 3: proto.CaseEvent.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_case_proto_depIdxs = []int32{
	4, // 0: proto.CaseEvent.timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: proto.CaseEvent.metadata:type_name -> proto.CaseEvent.MetadataEntry
	0, // 2: proto.ImportEventRequest.event:type_name -> proto.CaseEvent
	1, // 3: proto.CaseImportService.PublishCaseEvent:input_type -> proto.ImportEventRequest
	2, // 4: proto.CaseImportService.PublishCaseEvent:output_type -> proto.ImportEventResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_case_proto_init() }
func file_case_proto_init() {
	if File_case_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_case_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_case_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_case_proto_goTypes,
		DependencyIndexes: file_case_proto_depIdxs,
		MessageInfos:      file_case_proto_msgTypes,
	}.Build()
	File_case_proto = out.File
	file_case_proto_rawDesc = nil
	file_case_proto_goTypes = nil
	file_case_proto_depIdxs = nil
}
